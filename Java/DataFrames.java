

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * The DataFrames class is used to build a GUI for the real estate database. This was written using the GUI builder functionality
 * of NetBeans.
 */
public class DataFrames extends javax.swing.JFrame {

   

    /**
     * Creates new form DataFrames
     * @throws java.lang.Exception
     */
    
        private DBManager database;         // DBManager object, to connect to database, execute database methods
        
        // DefaultTableModel objects - one per database table, used to create a JTable for each database table
        private DefaultTableModel propDTM = null;
        private DefaultTableModel apptDTM = null;
        private DefaultTableModel countyDTM = null;
        private DefaultTableModel muniDTM = null;
        private DefaultTableModel schoolDTM = null;
        private DefaultTableModel agentDTM = null;
        
        private String [] listAgents;       // array to hold list of agents in database
        private String [] listMLS;          // array to hold list of MLS numbers in database
        private String[] listCounties;      // array to hold list of County IDs in database
        private String[] listMunis;         // array to hold list of Municipality IDs in database
        private String[] listSDistricts;    // array to hold list of School Districts in database
        
        // Strings to hold "SELECT *" query for each database table
        // used to create each table, populate the "list array" fields
        private String queryProperty = "SELECT * FROM PROPERTY";
        private String queryAppt = "SELECT * FROM APPOINTMENT";
        private String queryCounty = "SELECT * FROM COUNTY";
        private String queryMuni = "SELECT * FROM MUNICIPALITY";
        private String querySD = "SELECT * FROM SCHOOL_DISTRICT";
        private String queryAgent = "SELECT * FROM LISTING_AGENT";
        
    public DataFrames() throws Exception{
        
        initComponents();
        
        // create new DBManager object, to use database methods
        database = new DBManager();
        
        // call the createTable method to create all of the JTables
        createTable(queryProperty, propDTM, Property);
        createTable(queryAppt, apptDTM, Appointment);
        createTable(queryCounty, countyDTM, County);
        createTable(queryMuni, muniDTM, Municipality);
        createTable(querySD, schoolDTM, SchoolDistrict);
        createTable(queryAgent, agentDTM, ListingAgent);
        
        // call the createComboBoxes method to create the comboBoxes in the GUI
        createComboBoxes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Property = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Appointment = new javax.swing.JTable();
        mlsfield = new javax.swing.JTextField();
        assessfield = new javax.swing.JTextField();
        addressfield = new javax.swing.JTextField();
        cityfield = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        bedroomsfield = new javax.swing.JTextField();
        bathroomsfield = new javax.swing.JTextField();
        sqrFtfield = new javax.swing.JTextField();
        pricefield = new javax.swing.JTextField();
        insertProperty = new javax.swing.JButton();
        deleteProperty = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        updatePrice = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        updateAgent = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        newAgentcbo = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        newPricefield = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dateText = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        apptDateField = new javax.swing.JTextField();
        apptTimeField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        durationField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        typeField = new javax.swing.JTextField();
        insertAppt = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        mlsNewPricecbo = new javax.swing.JComboBox<>();
        mlsToDeletecbo = new javax.swing.JComboBox<>();
        jLabel55 = new javax.swing.JLabel();
        updateApptTimeDatebutton = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        updateApptTimebutton = new javax.swing.JButton();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        apptIDFieldDelete = new javax.swing.JTextField();
        deleteAppt = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        apptIDUpdateDT = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        apptIDUpdateTime = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        countyCBox = new javax.swing.JComboBox<>();
        muniCBox = new javax.swing.JComboBox<>();
        sdistrictCBox = new javax.swing.JComboBox<>();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        mlsNewAgentcbo = new javax.swing.JComboBox<>();
        newPropAgentCBO = new javax.swing.JComboBox<>();
        refreshPropTbl = new javax.swing.JButton();
        refreshApptTbl = new javax.swing.JButton();
        clearFieldsProp = new javax.swing.JButton();
        clearApptButton = new javax.swing.JButton();
        mlsApptField = new javax.swing.JComboBox<>();
        mlsPropTaxCBO = new javax.swing.JComboBox<>();
        propTax = new javax.swing.JTextField();
        calcPropTaxButton = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        County = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Municipality = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        SchoolDistrict = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        countyIDField = new javax.swing.JTextField();
        countyNameField = new javax.swing.JTextField();
        countyTaxField = new javax.swing.JTextField();
        insertCounty = new javax.swing.JButton();
        updateCountyTax = new javax.swing.JButton();
        delCounty = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        muniIDField = new javax.swing.JTextField();
        muniNameField = new javax.swing.JTextField();
        muniTaxField = new javax.swing.JTextField();
        schoolDistrictIDField = new javax.swing.JTextField();
        schoolDistrictNameField = new javax.swing.JTextField();
        schoolDistrictTaxField = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        insertMuni = new javax.swing.JButton();
        updateMuniTax = new javax.swing.JButton();
        deleteMuni = new javax.swing.JButton();
        insertSD = new javax.swing.JButton();
        updateSDTax = new javax.swing.JButton();
        deleteSD = new javax.swing.JButton();
        refreshGeoTables = new javax.swing.JButton();
        clearGeoFields = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ListingAgent = new javax.swing.JTable();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        agentIDField = new javax.swing.JTextField();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        agencyField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        insertAgent = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        updateAgentPhone = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        updateAgentEmail = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        deleteAgent = new javax.swing.JButton();
        refreshAgentTbl = new javax.swing.JButton();
        clearAgentFields = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Property", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        Property.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Property.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(Property);

        jLabel1.setText("1. MLS#");

        jLabel2.setText("2. Listed Price");

        jLabel3.setText("3. Assessed Value");

        jLabel4.setText("4. Address");

        jLabel5.setText("5. City");

        jLabel6.setText("6. County");

        Appointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(Appointment);

        jLabel7.setText("7. Muncipality");

        jLabel8.setText("8. School District");

        jLabel9.setText("9. Bedrooms");

        jLabel10.setText("10. Bathrooms");

        jLabel11.setText("11. Sq. Ft");

        jLabel12.setText("12. Date on Market");

        jLabel13.setText("13. Listing Agent");

        insertProperty.setText("Insert Property");
        insertProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPropertyActionPerformed(evt);
            }
        });

        deleteProperty.setText("Delete Property");
        deleteProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePropertyActionPerformed(evt);
            }
        });

        jLabel14.setText("18. MLS#");

        updatePrice.setText("Update Price");
        updatePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePriceActionPerformed(evt);
            }
        });

        jLabel15.setText("14. MLS#");

        updateAgent.setText("Update Listing Agent");
        updateAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAgentActionPerformed(evt);
            }
        });

        jLabel16.setText("17. New Listing Agent");

        newAgentcbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel18.setText("15. New Price");

        jLabel19.setText("16. MLS#");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        jLabel20.setText("Appointment");

        jLabel26.setText("Enter as yyyy-mm-dd");

        jLabel21.setText("Date (yyyy-mm-dd)");

        jLabel24.setText("Duration (in mins)");

        jLabel25.setText("Type");

        insertAppt.setText("Insert New Appt");
        insertAppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertApptActionPerformed(evt);
            }
        });

        jLabel22.setText("Time (hh:mm)");

        jLabel23.setText("MLS#");

        mlsNewPricecbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mlsToDeletecbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel55.setText("<html>Update Appointment Date & Time - enter new date/time <br/>to the left, enter 1. Appt ID & click<html/>");

        updateApptTimeDatebutton.setText("New Appt Date/Time");
        updateApptTimeDatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateApptTimeDatebuttonActionPerformed(evt);
            }
        });

        jLabel56.setText("<html> Update just the Appointment Time<br/> - enter new time left, enter 2. Appt ID & click<html/>");

        updateApptTimebutton.setText("New Appt Time");
        updateApptTimebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateApptTimebuttonActionPerformed(evt);
            }
        });

        jLabel57.setText("<html>Delete Appointment - enter 3. Appt ID and then click delete<html/>");

        jLabel58.setText("3. Appt ID");

        deleteAppt.setText("Delete Appt");
        deleteAppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteApptActionPerformed(evt);
            }
        });

        jLabel59.setText("1. Appt ID");

        jLabel60.setText("2. Appt ID");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel66.setText("<html>To add a new property, complete fields #1-13, <br/>then click \"Insert Property\" button<html/>");

        jLabel67.setText("Update price: complete fields #14-15");

        countyCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        muniCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        sdistrictCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel68.setText("Update agent: complete fields #16-17");

        jLabel69.setText("Delete property: complete field #18");

        mlsNewAgentcbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        newPropAgentCBO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        refreshPropTbl.setText("Refresh Property Table");
        refreshPropTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshPropTblActionPerformed(evt);
            }
        });

        refreshApptTbl.setText("Refresh Appt Table");
        refreshApptTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshApptTblActionPerformed(evt);
            }
        });

        clearFieldsProp.setText("Clear All Property Fields");
        clearFieldsProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsPropActionPerformed(evt);
            }
        });

        clearApptButton.setText("Clear All Appt Fields");
        clearApptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearApptButtonActionPerformed(evt);
            }
        });

        mlsApptField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mlsPropTaxCBO.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        propTax.setEditable(false);

        calcPropTaxButton.setText("Calc  Tax");
        calcPropTaxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcPropTaxButtonActionPerformed(evt);
            }
        });

        jLabel70.setText("Calc Property Tax: select #19");

        jLabel71.setText("19. MLS#");

        jLabel72.setText("Property Tax");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel67)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bedroomsfield, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(416, 416, 416)
                                                .addComponent(jLabel2)))
                                        .addGap(17, 17, 17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(updatePrice)
                                        .addGap(251, 251, 251)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(117, 117, 117)
                                                        .addComponent(refreshPropTbl))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(17, 17, 17)
                                                        .addComponent(pricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(assessfield, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(muniCBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sqrFtfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(clearFieldsProp)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel12)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel13)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(newPropAgentCBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(30, 30, 30)
                                                .addComponent(sdistrictCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(315, 315, 315))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(141, 141, 141)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(18, 18, 18)
                                                .addComponent(mlsToDeletecbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(deleteProperty)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(192, 192, 192)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel70)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel71)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(mlsPropTaxCBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(calcPropTaxButton))))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel69)
                                                .addGap(150, 150, 150)
                                                .addComponent(jLabel72)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(propTax, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(8, 8, 8))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(mlsNewPricecbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newPricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(265, 265, 265))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(apptDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel24)
                                                .addGap(18, 18, 18)
                                                .addComponent(durationField)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(65, 65, 65)
                                                .addComponent(jLabel25)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(64, 64, 64)
                                                .addComponent(jLabel22)
                                                .addGap(18, 18, 18)
                                                .addComponent(apptTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel58)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(apptIDFieldDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addGap(39, 39, 39)
                                        .addComponent(mlsApptField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(deleteAppt)
                                        .addComponent(insertAppt)))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel59)
                                        .addGap(18, 18, 18)
                                        .addComponent(apptIDUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updateApptTimeDatebutton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel60)
                                        .addGap(18, 18, 18)
                                        .addComponent(apptIDUpdateTime)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateApptTimebutton))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(423, 423, 423)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(updateAgent)
                                        .addGap(82, 82, 82)
                                        .addComponent(newAgentcbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mlsNewAgentcbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(37, 37, 37)
                                            .addComponent(insertProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel5))
                                            .addGap(15, 15, 15)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(mlsfield, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                                .addComponent(cityfield))
                                            .addGap(161, 161, 161)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel6))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(bathroomsfield, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(countyCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel11)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel68)
                                    .addGap(58, 58, 58)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(84, 84, 84)
                                .addComponent(refreshApptTbl)
                                .addGap(35, 35, 35)
                                .addComponent(clearApptButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1574, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1574, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {apptDateField, durationField, typeField});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {apptIDUpdateDT, apptIDUpdateTime});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertProperty)
                    .addComponent(refreshPropTbl)
                    .addComponent(clearFieldsProp))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(mlsfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assessfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cityfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(countyCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(muniCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(sdistrictCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bedroomsfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(bathroomsfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)
                                .addComponent(sqrFtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)
                                .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel68, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel67)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel17))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel69))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(newPropAgentCBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel70)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(mlsNewPricecbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(newPricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(mlsNewAgentcbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(deleteProperty))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(mlsPropTaxCBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel71)
                                .addComponent(calcPropTaxButton))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(mlsToDeletecbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updatePrice)
                            .addComponent(jLabel72)
                            .addComponent(propTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateAgent)
                            .addComponent(newAgentcbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(refreshApptTbl)
                    .addComponent(clearApptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel59)
                                        .addComponent(apptIDUpdateDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updateApptTimeDatebutton)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel60)
                                .addComponent(apptIDUpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateApptTimebutton))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(apptDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(apptTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(mlsApptField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(durationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(insertAppt)
                                .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteAppt)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel58)
                                .addComponent(apptIDFieldDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(505, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Property", jPanel1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "County", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16)))); // NOI18N

        County.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(County);

        Municipality.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(Municipality);

        SchoolDistrict.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(SchoolDistrict);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        jLabel29.setText("Municipality");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        jLabel30.setText("School District");

        jLabel31.setText("County ID");

        jLabel32.setText("County Name");

        jLabel33.setText("County Tax");

        insertCounty.setText("1. Insert County");
        insertCounty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCountyActionPerformed(evt);
            }
        });

        updateCountyTax.setText("2. Update County Tax");
        updateCountyTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCountyTaxActionPerformed(evt);
            }
        });

        delCounty.setText("3. Delete County");
        delCounty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delCountyActionPerformed(evt);
            }
        });

        jLabel34.setText("1. Fill out all 3 fields to enter new county");

        jLabel35.setText("<html>2. Enter County ID and updated tax rate <br/> to change tax rate<html/>");

        jLabel36.setText("<html>3. Fill out County ID field of county<br/> you wish to delete<html/>");

        jLabel37.setText("Municipality ID");

        jLabel38.setText("Municipality Name");

        jLabel39.setText("Municipality Tax");

        jLabel40.setText("School District ID");

        jLabel41.setText("School District Name");

        jLabel42.setText("School District Tax");

        jLabel43.setText("4. Fill out all 3 fields to enter a new municipality");

        jLabel44.setText("<html>5. Enter Municipality ID and updated tax rate<br/> to change tax rate<html/>");

        jLabel45.setText("<html>6. Fill out Municipality ID field of<br/> municipality you wish to delete<html/>");

        jLabel46.setText("7. Fill out all 3 fields to enter a new school district");

        jLabel47.setText("<html>8. Enter School District ID and updated tax rate<br/> to change tax rate<html/>");

        jLabel48.setText("<html>9. Fill out School District ID of school district<br/> you wish to delete<html/>");

        insertMuni.setText("4. Insert Muni");
        insertMuni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertMuniActionPerformed(evt);
            }
        });

        updateMuniTax.setText("5. Update Muni Tax");
        updateMuniTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMuniTaxActionPerformed(evt);
            }
        });

        deleteMuni.setText("6. Delete Muni");
        deleteMuni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMuniActionPerformed(evt);
            }
        });

        insertSD.setText("7. Insert SD");
        insertSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSDActionPerformed(evt);
            }
        });

        updateSDTax.setText("8. Update SD Tax");
        updateSDTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSDTaxActionPerformed(evt);
            }
        });

        deleteSD.setText("9. Delete SD");
        deleteSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSDActionPerformed(evt);
            }
        });

        refreshGeoTables.setText("Refresh All Tables");
        refreshGeoTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshGeoTablesActionPerformed(evt);
            }
        });

        clearGeoFields.setText("Clear All Fields");
        clearGeoFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearGeoFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countyIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countyNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countyTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(muniIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(muniNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(muniTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schoolDistrictIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schoolDistrictNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schoolDistrictTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68))
                    .addComponent(jLabel46)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteMuni)
                    .addComponent(updateMuniTax)
                    .addComponent(insertMuni)
                    .addComponent(deleteSD)
                    .addComponent(updateSDTax)
                    .addComponent(insertSD)
                    .addComponent(insertCounty)
                    .addComponent(updateCountyTax)
                    .addComponent(delCounty))
                .addContainerGap(223, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshGeoTables)
                .addGap(137, 137, 137)
                .addComponent(clearGeoFields)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {countyIDField, schoolDistrictIDField, schoolDistrictNameField, schoolDistrictTaxField});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel33)
                                    .addComponent(countyTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(countyIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(countyNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addGap(17, 17, 17)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addComponent(jLabel29))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(insertCounty)
                        .addGap(17, 17, 17)
                        .addComponent(updateCountyTax)
                        .addGap(18, 18, 18)
                        .addComponent(delCounty)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(insertMuni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateMuniTax)
                        .addGap(27, 27, 27)
                        .addComponent(deleteMuni))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(muniIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(muniNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(muniTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(insertSD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateSDTax)
                                .addGap(27, 27, 27)
                                .addComponent(deleteSD))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(schoolDistrictIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel40))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(schoolDistrictNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel41))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(schoolDistrictTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel42))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshGeoTables)
                    .addComponent(clearGeoFields))
                .addGap(0, 638, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Geography", jPanel2);

        ListingAgent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(ListingAgent);

        jLabel49.setText("ID");

        jLabel50.setText("First Name");

        jLabel51.setText("Last Name");

        jLabel52.setText("Agency");

        jLabel53.setText("Phone");

        jLabel54.setText("Email");

        insertAgent.setText("Insert New Agent");
        insertAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertAgentActionPerformed(evt);
            }
        });

        jLabel61.setText("Enter just digits of phone # (no punctuation)");

        jLabel62.setText("<html>Complete all fields & <br/>click to insert new agent<html/>");

        updateAgentPhone.setText("1. Update agent phone");
        updateAgentPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAgentPhoneActionPerformed(evt);
            }
        });

        jLabel63.setText("<html>1. Update agent phone: fill out agent ID <br/>& new phone number above, then click<html/>");

        jLabel64.setText("<html>2. Update agent email: fill out agent ID<br/> & new email above, then click<html/>");

        updateAgentEmail.setText("2. Update agent email");
        updateAgentEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAgentEmailActionPerformed(evt);
            }
        });

        jLabel65.setText("<html>3. Delete agent: fill out agent ID above,<br/> then click<html/>");

        deleteAgent.setText("3. Delete agent");
        deleteAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAgentActionPerformed(evt);
            }
        });

        refreshAgentTbl.setText("Refresh Table");
        refreshAgentTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAgentTblActionPerformed(evt);
            }
        });

        clearAgentFields.setText("Clear All Fields");
        clearAgentFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAgentFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 562, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52)
                            .addComponent(jLabel49))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(agentIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(agencyField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addComponent(jLabel53))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel51)
                                    .addComponent(jLabel54))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(76, 76, 76)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertAgent)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel61))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateAgentPhone)
                            .addComponent(refreshAgentTbl))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateAgentEmail))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteAgent)
                                    .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(clearAgentFields))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {firstNameField, phoneField});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emailField, lastNameField});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(agentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(agencyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52)
                        .addComponent(jLabel53))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel54)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertAgent)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61)
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateAgentPhone)
                    .addComponent(updateAgentEmail)
                    .addComponent(deleteAgent))
                .addGap(64, 64, 64)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshAgentTbl)
                    .addComponent(clearAgentFields))
                .addContainerGap(788, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agent", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1843, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * createTable method populates a JTable object using the data of table 
     * from a SQL Server database
     * @param query SQL query to return required data from the database table
     * @param dtmObj DefaultTableModel object for the specified table
     * @param jtableObj JTable that you wish to populate
     */
    private void createTable(String query, DefaultTableModel dtmObj, JTable jtableObj)
    {
        // call the getTableData method in the DBManager class
        // this method returns a DefaultTableModel object that can be used to build a JTable 
        dtmObj = database.getTableData(query);
        
        // pass the DefaultTableModel object to setModel method to populate the relevant JTable
        jtableObj.setModel(dtmObj);
    }
    
    /**
     * createComboBoxes method populates the combo boxes in the DataFrames GUI
     */
    private void createComboBoxes()
    {
        // call the getListTableID method in the DBManager class, passing the "SELECT *" query for the listing_agent table
        // to populate the array listAgents so that it holds the list of agents in the database
        listAgents = database.getListTableID(queryAgent);
        
        // remove all items from combo box new Agentcbo, then populate the combo box 
        // using a loop with the list of agents from the listAgents array
        newAgentcbo.removeAllItems();
        for (int i = 0; i < listAgents.length; i++)
        {
            newAgentcbo.addItem(listAgents[i]);
        }
        
        // repeat for newPropAgentCBO combo box
        newPropAgentCBO.removeAllItems();
        for (int i = 0; i<listAgents.length;i++)
            newPropAgentCBO.addItem(listAgents[i]);
        
        // populate the array listMLS with values of MLS numbers from the database
        listMLS = database.getListTableID(queryProperty);
        
        // remove all items from combo box mlsNewPricecbo
        // then populate the combo box, using a loop, with the list of MLS numbers in the listMLS array
        mlsNewPricecbo.removeAllItems();
        for (int i = 0; i<listMLS.length; i++)
            mlsNewPricecbo.addItem(listMLS[i]);
        
        // repeat for mlsNewAgent combo box
        mlsNewAgentcbo.removeAllItems();
        for (int i = 0; i<listMLS.length; i++)
            mlsNewAgentcbo.addItem(listMLS[i]);
        
        // remove all items from combo box mlsToDeletecbo
        // then populate the combo box, using a loop, with the list of MLS numbers in the listMLS array
        mlsToDeletecbo.removeAllItems();
            for (String listMLS1 : listMLS) {
                mlsToDeletecbo.addItem(listMLS1);
            }
        
        // populate mlsApptField combo box with MLS numbers
        mlsApptField.removeAllItems();
        for (int i = 0; i<listMLS.length; i++)
            mlsApptField.addItem(listMLS[i]);
        
        // populate mlsPropTax combo box with MLS numbers
        mlsPropTaxCBO.removeAllItems();
        for (String listMLS1 : listMLS)
            mlsPropTaxCBO.addItem(listMLS1);

        // using getListTableID method, populate the array listCounties with counties from the database
        listCounties = database.getListTableID(queryCounty);
        
        // clear contents of combo box countyCBox
        // populate combo box with values from listCounties array
        countyCBox.removeAllItems();
        for (int i = 0; i<listCounties.length; i++)
            countyCBox.addItem(listCounties[i]);
        
        // populate the array listMunis with values of municipalites from the database
        listMunis = database.getListTableID(queryMuni);
        
        // populate the combo box muniCBox
        muniCBox.removeAllItems();
        for (int i = 0; i<listMunis.length; i++)
            muniCBox.addItem(listMunis[i]);
        
        // populate the listSDistricts array using getListTableID method
        listSDistricts = database.getListTableID(querySD);
        
        // populate the sdistrictCBox combo box
        sdistrictCBox.removeAllItems();
        for (int i =0; i<listSDistricts.length; i++)
            sdistrictCBox.addItem(listSDistricts[i]);

    }
    /**
     * insertPropertyActionPerformed method executes when 
     * Insert Property button on Property tab is clicked
     * @param evt 
     */
    private void insertPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPropertyActionPerformed
        try{
            // get text from all of the text fields on the insert property form
        //mlsNum holds the property's MLS number
        String mlsNum = mlsfield.getText();
        
        // listed price, check to make sure not null, then
        // convert text field value to double
        double listNum = 0;
        if (pricefield.getText() != null && pricefield.getText().length() > 0)
            listNum = Double.parseDouble(pricefield.getText());
        
        // assess price of the property, again must check that field is not null
        // before converting to double
        double assessPriceNum = 0;
        if (assessfield.getText() != null && assessfield.getText().length()>0)
            assessPriceNum = Double.parseDouble(assessfield.getText());
        
        // property address
        String address = addressfield.getText();
        
        // property city
        String city = cityfield.getText();
        
        // assign selected items from combo boxes for county, municipality
        // and school district fields
        String selectCounty = countyCBox.getSelectedItem().toString();
        String selectMunicipality = muniCBox.getSelectedItem().toString();
        String selectSDistrict = sdistrictCBox.getSelectedItem().toString();
        
        // number of property's bedrooms
        int bedrooms = 0;
        if (bedroomsfield.getText() !=null && bedroomsfield.getText().length()>0)
            bedrooms = Integer.parseInt(bedroomsfield.getText()); 
        
        // number of property's bathrooms
        double bathrooms =0;
        if (bathroomsfield.getText() !=null && bathroomsfield.getText().length()>0)
            bathrooms = Double.parseDouble(bathroomsfield.getText()); 
        
        // square footage of property
        int sqrft = 0;
        if (sqrFtfield.getText() != null && sqrFtfield.getText().length()>0)
            sqrft = Integer.parseInt(sqrFtfield.getText());  
        
        // date that the property listed on the market
        String dateOnMkt = dateText.getText();
        // convert the text field into a sql.Date object
        java.sql.Date sqlDate = java.sql.Date.valueOf(dateOnMkt);
        
        // selected agent from combo box of agents
        String selectAgent = newPropAgentCBO.getSelectedItem().toString();
        
        // callInsertProperty method to insert a new property into the property table
        database.callInsertProperty(mlsNum, listNum, assessPriceNum, address, city, selectCounty, 
                selectMunicipality, selectSDistrict, bedrooms,
                bathrooms, sqrft, sqlDate, selectAgent);

        }
        
        catch (Exception e) {
            e.printStackTrace();
        }
                
    }//GEN-LAST:event_insertPropertyActionPerformed
    /**
     * insertApptActionPerformed inserts a new appointment into the appointment table,
     * executes when "Insert New Appointment" button is clicked
     * @param evt 
     */
    private void insertApptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertApptActionPerformed
        try {
            
            // get values from the different text fields on the insert appointment form
            
            // format date from text field into a java.sql.Date
            String apptDate = apptDateField.getText();
            java.sql.Date sqlapptDate = java.sql.Date.valueOf(apptDate);
            
            
            // format time from text field into a java.sql.Time
            String time = apptTimeField.getText();
            DateFormat formatter = new SimpleDateFormat("HH:mm");
            java.sql.Time sqlTimeValue = new java.sql.Time(formatter.parse(time).getTime());
            
            // MLS number selected from relevant combo box
            String mlsAppt = mlsApptField.getSelectedItem().toString();
            
            // duration of appointment, converted to an integer
            int duration = 0;
            if (durationField.getText() !=null)
                duration = Integer.parseInt(durationField.getText());
            
            // get type of appointment from text field
            String type = typeField.getText();
            
            // callInsertAppt method from DBManager class
            // this method executes a Stored Procedure to insert a new appointment into the appointment table
            database.callInsertAppt(sqlapptDate, sqlTimeValue, mlsAppt, duration, type);
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_insertApptActionPerformed
/**
 * insertCountyActionPerformed method inserts a new county into county table.
 * It executes when the "Insert County" button is pressed.
 * @param evt 
 */
    private void insertCountyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCountyActionPerformed
        try{
            
            // get text fields from the county form and store in variables
            String countyID = countyIDField.getText();
            String countyName = countyNameField.getText();
            double countyTax = 0;
            if (countyTaxField.getText()!=null)
                countyTax = Double.parseDouble(countyTaxField.getText());
            
            // use callInsertCounty method from DBManager class to insert a new row
            // into the county table
            database.callInsertCounty(countyID, countyName,countyTax);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_insertCountyActionPerformed
    
    // The updateMuniTaxActionPerformed method updates a municipality's tax rate
    // when the "Update Municipality Tax" button is pushed.
    private void updateMuniTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMuniTaxActionPerformed
        try{
            
            // store data from Municipality form text fields into variables
            double muniTax = 0.0;
            if (muniTaxField.getText()!=null)
                muniTax = Double.parseDouble(muniTaxField.getText());
            String muniID = muniIDField.getText();
            
            // use callUpdateMuniTax from DBManager class to update the tax rate,
            // passing the values from the text fields to the method
            database.callUpdateMuniTax(muniTax, muniID);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_updateMuniTaxActionPerformed
    
    /**
     * The insertSDActionPerformed inserts a new school district into the 
     * school_district table when "Insert School District" button is clicked.
     * @param evt 
     */
  
    private void insertSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSDActionPerformed
        try{
            // store values from school district form fields in variables
            String id = schoolDistrictIDField.getText();
            String name = schoolDistrictNameField.getText();
            double tax = 0.0;
            if (schoolDistrictTaxField.getText() != null)
                tax = Double.parseDouble(schoolDistrictTaxField.getText());
            
            // use DBManager class method callInsertSDistrict to insert the
            // new row into the school_district table
            database.callInsertSDistrict(id, name, tax);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }        

    }//GEN-LAST:event_insertSDActionPerformed
    
    /**
     * The updateAgentActionPerformed method updates the listing agent for a 
     * particular property when the "Update Listing Agent" button is clicked.
     * @param evt 
     */
    private void updateAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAgentActionPerformed
        try{
            // store selected values from the two combo boxes into variables
            String selectAgent = newAgentcbo.getSelectedItem().toString();
            String selectMLS = mlsNewAgentcbo.getSelectedItem().toString();
            
            // use callUpdateAgent method from DBManager class to perform the update
            database.callUpdateAgent(selectAgent, selectMLS);
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateAgentActionPerformed
    /**
     * The updatePriceActionPerformed method updates the list price for a 
     * property when the "Update Price" button is clicked.
     * @param evt 
     */
    private void updatePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePriceActionPerformed
        try{
            // get data from form fields
            double newPrice = 0;
            if (newPricefield.getText()!=null)
                newPrice = Double.parseDouble(newPricefield.getText());
                
            String selectMLS = mlsNewPricecbo.getSelectedItem().toString();
            
            // use DBManager callUpdatePrice method to perform the price update
            // in the database
            database.callUpdatePrice(newPrice, selectMLS);
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_updatePriceActionPerformed
    /**
     * The deletePropertyActionPerformed deletes a property from the table 
     * when the "Delete Property" button is clicked.
     * @param evt 
     */
    private void deletePropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePropertyActionPerformed
        try{
            // convert selected value from combo box to string and store in 
            // selectMLS variable
            String selectMLS = mlsToDeletecbo.getSelectedItem().toString();
            
            // pass selectMLS to callDeleteProp method to delete the property
            // from the database
            database.callDeleteProp(selectMLS);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_deletePropertyActionPerformed
    
    /**
     * The updateApptTimebuttonActionPerformed updates the time of an appointment
     * when the "New Appt Time" button is clicked.
     * @param evt 
     */
    
    private void updateApptTimebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateApptTimebuttonActionPerformed
        try{
            // get values from form fields                         
            String time = apptTimeField.getText();
            
             // convert time from text field into java.sql.Time object
            DateFormat formatter = new SimpleDateFormat("HH:mm");
            java.sql.Time sqlTimeValue = new java.sql.Time(formatter.parse(time).getTime());
            
            int id = 0;
            if (apptIDUpdateTime.getText() !=null)
                id = Integer.parseInt(apptIDUpdateTime.getText());
            
            // use DBManager class method callUpdateApptTime to execute the update
            database.callUpdateApptTime(sqlTimeValue, id);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
                
    }//GEN-LAST:event_updateApptTimebuttonActionPerformed
    
    /**
     * The updateApptTimeDatebuttonActionPerformed method updates the date and
     * time of an appointment when the "New Appt Date & Time" button is clicked.
     * @param evt 
     */
    private void updateApptTimeDatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateApptTimeDatebuttonActionPerformed
         try{
            // get text from form fields and store in variables
            // convert date into java.sql.Date object
            String apptDate = apptDateField.getText();
            java.sql.Date sqlapptDate = java.sql.Date.valueOf(apptDate);
            
            // convert time to java.sql.Time object 
            String time = apptTimeField.getText();
            DateFormat formatter = new SimpleDateFormat("HH:mm");
            java.sql.Time sqlTimeValue = new java.sql.Time(formatter.parse(time).getTime());
            
            int id = 0;
            if (apptIDUpdateDT.getText() !=null)
                id = Integer.parseInt(apptIDUpdateDT.getText());
            
            // call DBManager class method callUpdateApptDateTime to perform the
            // update
            database.callUpdateApptDateTime(sqlapptDate, sqlTimeValue, id);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateApptTimeDatebuttonActionPerformed
    /**
     * The deleteApptActionPerformed deletes an appointment from the
     * appointment table when the "Delete Appt" button is clicked. 
     * @param evt 
     */
    private void deleteApptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteApptActionPerformed
        try{              
            // get data from id field                  
            int id = 0;
            if (apptIDFieldDelete.getText() !=null)
                id = Integer.parseInt(apptIDFieldDelete.getText());
            
            // use callDeleteAppt method from DBManager class to perform the update
            database.callDeleteAppt(id);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteApptActionPerformed
    
    /**
     * The updateCountyTaxActionPerformed method updates the tax rate for the
     * selected county when the "Update County Tax" button is clicked.
     * @param evt 
     */
    private void updateCountyTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCountyTaxActionPerformed
        try{              
            // get data from county form fields                      
            double newtax = 0.0;
            if (countyTaxField.getText() !=null)
                    newtax = Double.parseDouble(countyTaxField.getText());
                String id = countyIDField.getText();
                
            // call method callUpdateCountyTax from DBManager class to update tax rate
            database.callUpdateCountyTax(newtax, id);
            }
        catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_updateCountyTaxActionPerformed
    /**
     * The insertMuniActionPerformed inserts a new municipality into the 
     * municipality table when the "Insert Municipality" button is clicked.
     * @param evt 
     */
    private void insertMuniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertMuniActionPerformed
        try{                 
            // store data from Municipality form fields into variables
            String id = muniIDField.getText();
            String name = muniNameField.getText();
            double tax = 0.0;
            if (muniTaxField.getText() != null)
                tax = Double.parseDouble(muniTaxField.getText());
            
            // use callInsertMuni method, with the variables as parameters,
            // to insert a new municipality into the database table
            database.callInsertMuni(id, name, tax);
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_insertMuniActionPerformed
    
    /**
     * The delCountyActionPerformed method deletes a county from the table 
     * when the "Delete County" button is clicked.
     * @param evt 
     */
    private void delCountyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCountyActionPerformed
        try{
            // get the county ID from the form              
            String id = countyIDField.getText();
            
            // use the callDeleteCounty method to delete the county from the database
            database.callDeleteCounty(id);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_delCountyActionPerformed

    /**
     * The deleteMuniActionPerformed deletes a municipality from the municipality 
     * table when the "Delete Municipality" button is clicked.
     * @param evt 
     */
    private void deleteMuniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMuniActionPerformed
        try{
            // store the municipality ID from the form into a variable
            String id = muniIDField.getText();
                
            // use the callDeleteMuni method to delete the municipality in question
            database.callDeleteMuni(id);
  
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteMuniActionPerformed
    /**
     * The updateSDTaxActionPerformed method updates a school district tax rate
     * when the "Update School District Tax" button is clicked.
     * @param evt 
     */
    private void updateSDTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSDTaxActionPerformed
        try{
            // get relevant data from the form
            double sdTax = 0.0;
            if (schoolDistrictTaxField.getText()!=null)
                sdTax = Double.parseDouble(schoolDistrictTaxField.getText());
            String sdID = schoolDistrictIDField.getText();
            
            // use DBManager class method callUpdateSDistrictTax to update the
            // tax rate in the database for the selected school district
            database.callUpdateSDistrictTax(sdTax, sdID);
        }
        catch(Exception e){
            e.printStackTrace();
        }
              
    }//GEN-LAST:event_updateSDTaxActionPerformed
    /**
     * The deleteSDActionPerformed deletes a school district from the 
     * school_district table when the "Delete School District" button is clicked.
     * @param evt 
     */
    private void deleteSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSDActionPerformed
        try{
            // store school district ID from the school district form in a variable
            String sdID = schoolDistrictIDField.getText();
            
            // use callDeleteSDistrict method to delete the school district
            database.callDeleteSDistrict(sdID);
        }
        catch(Exception e){
            e.printStackTrace();
        }        

    }//GEN-LAST:event_deleteSDActionPerformed
    /**
     * The insertAgentActionPerformed inserts a new agent into the listing_agent
     * table in the database when the "Insert New Agent" button is clicked.
     * @param evt 
     */
    private void insertAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAgentActionPerformed
        try{                 
            // retrieve and store data from agent form
            String id = agentIDField.getText();
            String firstName = firstNameField.getText();
            String lastName = lastNameField.getText();
            String agency = agencyField.getText();
            String phone = phoneField.getText();
            String email = emailField.getText();
            
            // use callInsertAgent method to insert a new row into the listing_agent table
            database.callInsertAgent(id, firstName, lastName, agency, phone, email);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }        

    }//GEN-LAST:event_insertAgentActionPerformed
    
    /**
     * The updateAgentPhoneActionPerformed method updates the phone number for 
     * an agent when the "Update agent phone" button is clicked.
     * @param evt 
     */
    private void updateAgentPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAgentPhoneActionPerformed
        try{
            // retrieve and store needed data from the form                  
            String phone = phoneField.getText();
            String id = agentIDField.getText();
            
            // use DBManager class callUpdateAgent method to update the phone number
            database.callUpdateAgentPhone(phone, id);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateAgentPhoneActionPerformed
    /**
     * The updateAgentEmailActionPerformed updates the email address for an 
     * agent when the "Update agent email" button is clicked.
     * @param evt 
     */
    private void updateAgentEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAgentEmailActionPerformed
         try{
            // retrieve and store needed data from the agent form                
            String email = emailField.getText();
            String id = agentIDField.getText();
            
            // use callUpdateAgentEmail method to update the email address
            database.callUpdateAgentEmail(email, id);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateAgentEmailActionPerformed
    
    /**
     * The deleteAgentActionPerformed method deletes an agent when the
     * "Delete agent" button is clicked.
     * @param evt 
     */
    private void deleteAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAgentActionPerformed
         try{
                              
            // retrieve and store agent ID from the form
            String id = agentIDField.getText();
            
            // use callDeleteAgent method from DBManager class to delete the agent
            // from the listing_agent table in the database
            database.callDeleteAgent(id);
            
            }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteAgentActionPerformed
    /**
     * The refreshPropTblActionPerformed method refreshes the Property table when the 
     * "refreshPropTbl" button is clicked. This method is useful when an update 
     * has been made to the table, and you would like to display the update in 
     * the table and combo boxes.
     * @param evt 
     */
    private void refreshPropTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshPropTblActionPerformed
        // use createTable method to create the Property table
        createTable(queryProperty, propDTM, Property);
        // use createComboBoxes method to create the combo boxes
        createComboBoxes();
    }//GEN-LAST:event_refreshPropTblActionPerformed
    
    /**
     * The refreshApptTblActionPerformed method refreshes the Appointment table
     * and the combo boxes when the "refreshApptTbl" button is clicked. 
     * @param evt 
     */
    private void refreshApptTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshApptTblActionPerformed
        createTable(queryAppt, apptDTM, Appointment);
        createComboBoxes();
    }//GEN-LAST:event_refreshApptTblActionPerformed
    
    /**
     * The clearFieldsPropActionPerformed sets all text in the Property form to
     * a blank string and resets all combo boxes to index 0 (the first item in the list),
     * when the "clearFieldsProp" button is clicked.
     * @param evt 
     */
    private void clearFieldsPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsPropActionPerformed
        mlsfield.setText("");
        pricefield.setText("");
        assessfield.setText("");
        addressfield.setText("");
        cityfield.setText("");
        countyCBox.setSelectedIndex(0);
        muniCBox.setSelectedIndex(0);
        sdistrictCBox.setSelectedIndex(0);
        bedroomsfield.setText("");
        bathroomsfield.setText("");
        sqrFtfield.setText("");
        dateText.setText("");
        newPropAgentCBO.setSelectedIndex(0);
        mlsNewPricecbo.setSelectedIndex(0);
        newPricefield.setText("");
        mlsNewAgentcbo.setSelectedIndex(0);
        newAgentcbo.setSelectedIndex(0);
        mlsToDeletecbo.setSelectedIndex(0);
        mlsPropTaxCBO.setSelectedIndex(0);
        propTax.setText("");
        
    }//GEN-LAST:event_clearFieldsPropActionPerformed
    
    /**
     * The clearApptButton method clears the fields in the appointment table
     * when the "clearApptButton" button is clicked.
     * @param evt 
     */
    private void clearApptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearApptButtonActionPerformed
        apptDateField.setText("");
        apptTimeField.setText("");
        mlsApptField.setSelectedIndex(0);
        durationField.setText("");
        typeField.setText("");
        apptIDUpdateDT.setText("");
        apptIDUpdateTime.setText("");
        apptIDFieldDelete.setText("");
    }//GEN-LAST:event_clearApptButtonActionPerformed
    
    /**
     * The refreshGeoTablesActionPerformed method refreshes the three geographic
     * tables: county, municipality, school_district, and recreates the combo 
     * boxes, when the refreshGeoTables button is pressed.
     * @param evt 
     */
    private void refreshGeoTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshGeoTablesActionPerformed
        createTable(queryCounty, countyDTM, County);
        createTable(queryMuni, muniDTM, Municipality);
        createTable(querySD, schoolDTM, SchoolDistrict);
        createComboBoxes();
    }//GEN-LAST:event_refreshGeoTablesActionPerformed
    /**
     * The clearGeoFieldsActionPerformed method clears all of the forms on 
     * the "Geography" tab of the GUI--the county, municipality, and school district
     * forms--when the "clearGeoFields" button is clicked.
     * @param evt 
     */
    private void clearGeoFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearGeoFieldsActionPerformed
        countyIDField.setText("");
        countyNameField.setText("");
        countyTaxField.setText("");
        muniIDField.setText("");
        muniNameField.setText("");
        muniTaxField.setText("");
        schoolDistrictIDField.setText("");
        schoolDistrictNameField.setText("");
        schoolDistrictTaxField.setText("");
    }//GEN-LAST:event_clearGeoFieldsActionPerformed
    
    /**
     * The refreshAgentTblActionPerformed method recreates the agent table 
     * when the "refreshAgentTbl" button is clicked on the agent tab.
     * @param evt 
     */
    private void refreshAgentTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAgentTblActionPerformed
        createTable(queryAgent, agentDTM, ListingAgent);
        createComboBoxes();
    }//GEN-LAST:event_refreshAgentTblActionPerformed
    
    /**
     * The clearAgentFieldsActionPerformed method clears all of the form
     * fields on the agent tab when the "clearAgentFields" button is clicked.
     * @param evt 
     */
    private void clearAgentFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAgentFieldsActionPerformed
        agentIDField.setText("");
        firstNameField.setText("");
        lastNameField.setText("");
        agencyField.setText("");
        phoneField.setText("");
        emailField.setText("");
    }//GEN-LAST:event_clearAgentFieldsActionPerformed
    
    /**
     * The calcPropTaxButtonActionPerformed method populates an uneditable
     * text field with the calculated property tax for a selected property.
     * @param evt 
     */
    private void calcPropTaxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcPropTaxButtonActionPerformed
       // retrieve and store the selected MLS number
       String selectMLS = mlsPropTaxCBO.getSelectedItem().toString();
       
       // 1. call the DBManager class calcProperty tax method to calculate
       // the property tax for the selected property (selectMLS)
       // 2. since the method returns a double, use the String.valueOf method
       // to represent the returned value as a String
       // 3. set the text of the propTax text field as the method's returned value  
       propTax.setText(String.valueOf(database.calcPropertyTax(selectMLS)));
       
       
    }//GEN-LAST:event_calcPropTaxButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DataFrames().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(DataFrames.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Appointment;
    private javax.swing.JTable County;
    private javax.swing.JTable ListingAgent;
    private javax.swing.JTable Municipality;
    private javax.swing.JTable Property;
    private javax.swing.JTable SchoolDistrict;
    private javax.swing.JTextField addressfield;
    private javax.swing.JTextField agencyField;
    private javax.swing.JTextField agentIDField;
    private javax.swing.JTextField apptDateField;
    private javax.swing.JTextField apptIDFieldDelete;
    private javax.swing.JTextField apptIDUpdateDT;
    private javax.swing.JTextField apptIDUpdateTime;
    private javax.swing.JTextField apptTimeField;
    private javax.swing.JTextField assessfield;
    private javax.swing.JTextField bathroomsfield;
    private javax.swing.JTextField bedroomsfield;
    private javax.swing.JButton calcPropTaxButton;
    private javax.swing.JTextField cityfield;
    private javax.swing.JButton clearAgentFields;
    private javax.swing.JButton clearApptButton;
    private javax.swing.JButton clearFieldsProp;
    private javax.swing.JButton clearGeoFields;
    private javax.swing.JComboBox<String> countyCBox;
    private javax.swing.JTextField countyIDField;
    private javax.swing.JTextField countyNameField;
    private javax.swing.JTextField countyTaxField;
    private javax.swing.JTextField dateText;
    private javax.swing.JButton delCounty;
    private javax.swing.JButton deleteAgent;
    private javax.swing.JButton deleteAppt;
    private javax.swing.JButton deleteMuni;
    private javax.swing.JButton deleteProperty;
    private javax.swing.JButton deleteSD;
    private javax.swing.JTextField durationField;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JButton insertAgent;
    private javax.swing.JButton insertAppt;
    private javax.swing.JButton insertCounty;
    private javax.swing.JButton insertMuni;
    private javax.swing.JButton insertProperty;
    private javax.swing.JButton insertSD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JComboBox<String> mlsApptField;
    private javax.swing.JComboBox<String> mlsNewAgentcbo;
    private javax.swing.JComboBox<String> mlsNewPricecbo;
    private javax.swing.JComboBox<String> mlsPropTaxCBO;
    private javax.swing.JComboBox<String> mlsToDeletecbo;
    private javax.swing.JTextField mlsfield;
    private javax.swing.JComboBox<String> muniCBox;
    private javax.swing.JTextField muniIDField;
    private javax.swing.JTextField muniNameField;
    private javax.swing.JTextField muniTaxField;
    private javax.swing.JComboBox<String> newAgentcbo;
    private javax.swing.JTextField newPricefield;
    private javax.swing.JComboBox<String> newPropAgentCBO;
    private javax.swing.JTextField phoneField;
    private javax.swing.JTextField pricefield;
    private javax.swing.JTextField propTax;
    private javax.swing.JButton refreshAgentTbl;
    private javax.swing.JButton refreshApptTbl;
    private javax.swing.JButton refreshGeoTables;
    private javax.swing.JButton refreshPropTbl;
    private javax.swing.JTextField schoolDistrictIDField;
    private javax.swing.JTextField schoolDistrictNameField;
    private javax.swing.JTextField schoolDistrictTaxField;
    private javax.swing.JComboBox<String> sdistrictCBox;
    private javax.swing.JTextField sqrFtfield;
    private javax.swing.JTextField typeField;
    private javax.swing.JButton updateAgent;
    private javax.swing.JButton updateAgentEmail;
    private javax.swing.JButton updateAgentPhone;
    private javax.swing.JButton updateApptTimeDatebutton;
    private javax.swing.JButton updateApptTimebutton;
    private javax.swing.JButton updateCountyTax;
    private javax.swing.JButton updateMuniTax;
    private javax.swing.JButton updatePrice;
    private javax.swing.JButton updateSDTax;
    // End of variables declaration//GEN-END:variables
}
